{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} %}
[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
version = "{{ cookiecutter.version }}"
name = "{{ cookiecutter.project_slug }}"
authors = [{ name = "{{ cookiecutter.full_name.replace('\"', '\\\"') }}", email = "{{ cookiecutter.email }}" }]
description = "{{ cookiecutter.project_short_description }}"
{%- if cookiecutter.open_source_license in license_classifiers %}
license = { text = "{{ cookiecutter.open_source_license }}" }
{%- endif %}
keywords = ["{{ cookiecutter.project_slug }}"]
dependencies = [
{%- if cookiecutter.command_line_interface|lower == "click" -%}
"click"{%- endif -%}
{%- if cookiecutter.with_utils == "y" -%}
, "matplotlib", "opencv-contrib-python", "opencv-python", "numpy", "seaborn"{%- endif -%}
]
requires-python = ">=3.10"
dynamic = ["readme"]
classifiers=[
        "Development Status :: 2 - Pre-Alpha",
        "Intended Audience :: Developers",
{%- if cookiecutter.open_source_license in license_classifiers %}
        "{{ license_classifiers[cookiecutter.open_source_license] }}",
{%- endif %}
        "Natural Language :: English",
        "Programming Language :: Python :: 3.10",
    ]

[project.optional-dependencies]
dev = ["black", "build", "tox", "coverage", "Sphinx", "twine"
{%- if cookiecutter.command_line_interface|lower == "click" -%}
, "click"{%- endif -%}
{%- if cookiecutter.use_pytest == "y" -%}
, "pytest"{%- endif -%}
{%- if cookiecutter.use_black == "y" -%}
, "black"{%- endif -%}
]
test = ["tox", "coverage", "Sphinx", "twine"
{%- if cookiecutter.command_line_interface|lower == "click" -%}
, "click"{%- endif -%}
{%- if cookiecutter.use_pytest == "y" -%}
, "pytest"{%- endif -%}
{%- if cookiecutter.use_black == "y" -%}
, "black"{%- endif -%}
]

[project.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}.cli:main"

[project.urls]
repository = "https://gitlab.com/{{ cookiecutter.gitlab_username }}/{{ cookiecutter.project_slug }}"
changelog = "https://gitlab.com/{{ cookiecutter.gitlab_username }}/{{ cookiecutter.project_slug }}/blob/master/CHANGELOG.md"

[tool.setuptools.dynamic]
readme = { file = ["README.rst", "CONTRIBUTING.rst", "HISTORY.rst"] }
{%- if cookiecutter.use_pytest == 'y' %}

[tool.setuptools.packages.find]
  include=["{{ cookiecutter.project_slug }}"]

[tool.pytest]
collect_ignore = ["setup.py"]

[tool.pytest.ini_options]
  addopts  ="--capture=sys --basetemp=testdata_tmp --junitxml=testreports/report.xml"
  testpaths=["benchmark", "."]
{%- endif %}
{%- if cookiecutter.use_black == "y" %}

[tool.black]
  line-length = 120
  ignore = "E501"
  extend-exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.env
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''
{% endif -%}